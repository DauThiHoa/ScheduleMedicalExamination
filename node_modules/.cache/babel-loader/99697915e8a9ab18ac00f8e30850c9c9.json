{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Documents\\\\GitHub\\\\ScheduleMedicalExamination\\\\src\\\\containers\\\\System\\\\UserManage.js\";\nimport React, { Component } from 'react'; // import { FormattedMessage } from 'react-intl';\n\nimport { connect } from 'react-redux';\nimport './UserManage.scss';\nimport { getAllUsers } from '../../services/userService';\nimport ModalUser from './ModalUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserManage extends Component {\n  //check ham constructor\n  constructor(props) {\n    super(props);\n\n    this.handleAddNewUser = () => {\n      this.setState({\n        isOpenModalUser: true\n      });\n    };\n\n    this.toggleUserModal = () => {\n      this.setState({\n        isOpenModalUser: !this.state.isOpenModalUser\n      });\n    };\n\n    this.createNewUser = (data, message) => {\n      alert('call me');\n      console.log('check data from child: ', data, message);\n    };\n\n    this.state = {\n      arrUsers: [],\n      isOpenModalUser: false\n    };\n  }\n\n  async componentDidMount() {\n    let response = await getAllUsers('ALL');\n    console.log('responseresponseresponse', response);\n\n    if (response && response.data.errCode === 0) {\n      console.log('response.users', response.users);\n      this.setState({\n        arrUsers: response.data.users\n      });\n    }\n  }\n\n  /** life cycle\r\n   * Run component\r\n   * 1. Run construct -> init state\r\n   * 2. Did mount (set state):born: unmount\r\n   * 3. Render(re-render)\r\n  */\n  render() {\n    let arrUsers = this.state.arrUsers;\n    console.log(arrUsers); //properties: nested\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-container\",\n      children: [/*#__PURE__*/_jsxDEV(ModalUser, {\n        isOpen: this.state.isOpenModalUser,\n        toggleFromParent: this.toggleUserModal,\n        createNewUser: this.createNewUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title text-center\",\n        children: \" Manage users with Eric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-btn-primary px-3\",\n          onClick: () => this.handleAddNewUser(),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 22\n          }, this), \" Add new users\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-table mt-3 mx-1\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"customers\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Frist name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), arrUsers && arrUsers.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-edit\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-pencil-alt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 74\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-delete\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-trash\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 76\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);","map":{"version":3,"sources":["C:/Users/ADMIN/Documents/GitHub/ScheduleMedicalExamination/src/containers/System/UserManage.js"],"names":["React","Component","connect","getAllUsers","ModalUser","UserManage","constructor","props","handleAddNewUser","setState","isOpenModalUser","toggleUserModal","state","createNewUser","data","message","alert","console","log","arrUsers","componentDidMount","response","errCode","users","render","map","item","index","email","firstName","lastName","address","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserManage.scss';\r\nimport { getAllUsers } from '../../services/userService';\r\nimport ModalUser from './ModalUser';\r\nclass UserManage extends Component {\r\n    //check ham constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrUsers: [],\r\n            isOpenModalUser: false,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await getAllUsers('ALL');\r\n\r\n        console.log('responseresponseresponse', response);\r\n        if (response && response.data.errCode === 0) {\r\n            console.log('response.users', response.users);\r\n            this.setState({\r\n                arrUsers: response.data.users\r\n            })\r\n        }\r\n    }\r\n    handleAddNewUser = () => {\r\n        this.setState({\r\n            isOpenModalUser: true,\r\n        })\r\n    }\r\n    toggleUserModal = () => {\r\n        this.setState({\r\n            isOpenModalUser: !this.state.isOpenModalUser,\r\n        })\r\n    }\r\ncreateNewUser = (data ,message) =>{\r\n    alert('call me')\r\n    console.log('check data from child: ', data,message);\r\n}\r\n    /** life cycle\r\n     * Run component\r\n     * 1. Run construct -> init state\r\n     * 2. Did mount (set state):born: unmount\r\n     * 3. Render(re-render)\r\n    */\r\n\r\n    render() {\r\n        let arrUsers = this.state.arrUsers;\r\n        console.log(arrUsers)\r\n        //properties: nested\r\n        return (\r\n            <div className=\"users-container\">\r\n                <ModalUser\r\n                    isOpen={this.state.isOpenModalUser}\r\n                    toggleFromParent={this.toggleUserModal}\r\n                    createNewUser = {this.createNewUser}\r\n                />\r\n                <div className=\"title text-center\"> Manage users with Eric</div>\r\n                <div className=\"mx-1\">\r\n                    <button\r\n                        className=\"btn-btn-primary px-3\"\r\n                        onClick={() => this.handleAddNewUser()}\r\n                    ><i className='fas fa-plus'></i> Add new users</button>\r\n\r\n                </div>\r\n                <div className=\"users-table mt-3 mx-1\">\r\n                    <table id=\"customers\">\r\n                        <tbody>\r\n\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <th>Frist name</th>\r\n                                <th>Last name</th>\r\n                                <th>Address</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                            {arrUsers && arrUsers.map((item, index) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.firstName}</td>\r\n                                        <td>{item.lastName}</td>\r\n                                        <td>{item.address}</td>\r\n                                        <td>\r\n                                            <button className='btn-edit'><i className=\"fas fa-pencil-alt\"></i></button>\r\n                                            <button className='btn-delete'><i className=\"fas fa-trash\"></i></button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div >\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n"]},"metadata":{},"sourceType":"module"}