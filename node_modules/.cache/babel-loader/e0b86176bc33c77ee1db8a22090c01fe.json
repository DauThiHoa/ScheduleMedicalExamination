{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THINKPRO\\\\Documents\\\\GitHub\\\\ReactJs\\\\src\\\\containers\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter as Router } from 'connected-react-router';\nimport { history } from '../redux';\nimport { ToastContainer } from 'react-toastify';\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\nimport { path } from '../utils'; // import Home => HIEN THI TRANG HOME.JS\n\nimport Home from '../routes/Home'; // import Login => Hien Thi Trang Login.js\n// import Login from '../routes/Login';\n\nimport Login from './Auth/Login';\nimport Header from './Header/Header';\nimport System from '../routes/System';\nimport { CustomToastCloseButton } from '../components/CustomToast';\nimport ConfirmModal from '../components/ConfirmModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handlePersistorState = () => {\n      const {\n        persistor\n      } = this.props;\n      let {\n        bootstrapped\n      } = persistor.getState();\n\n      if (bootstrapped) {\n        if (this.props.onBeforeLift) {\n          Promise.resolve(this.props.onBeforeLift()).then(() => this.setState({\n            bootstrapped: true\n          })).catch(() => this.setState({\n            bootstrapped: true\n          }));\n        } else {\n          this.setState({\n            bootstrapped: true\n          });\n        }\n      }\n    };\n  }\n\n  // => HIEN VIEW \n  componentDidMount() {\n    this.handlePersistorState();\n  } // NHUC LENH JS => VAO FILE HTML\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        history: history,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-container\",\n          children: [/*#__PURE__*/_jsxDEV(ConfirmModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), this.props.isLoggedIn && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"content-container\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: path.HOME,\n                exact: true,\n                component: Home\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: path.LOGIN,\n                component: userIsNotAuthenticated(Login)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: path.SYSTEM,\n                component: userIsAuthenticated(System)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n            className: \"toast-container\",\n            toastClassName: \"toast-item\",\n            bodyClassName: \"toast-item-body\",\n            autoClose: false,\n            hideProgressBar: true,\n            pauseOnHover: false,\n            pauseOnFocusLoss: true,\n            closeOnClick: false,\n            draggable: false,\n            closeButton: /*#__PURE__*/_jsxDEV(CustomToastCloseButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.app.started,\n    isLoggedIn: state.admin.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/THINKPRO/Documents/GitHub/ReactJs/src/containers/App.js"],"names":["React","Component","Fragment","connect","Route","Switch","ConnectedRouter","Router","history","ToastContainer","userIsAuthenticated","userIsNotAuthenticated","path","Home","Login","Header","System","CustomToastCloseButton","ConfirmModal","App","handlePersistorState","persistor","props","bootstrapped","getState","onBeforeLift","Promise","resolve","then","setState","catch","componentDidMount","render","isLoggedIn","HOME","LOGIN","SYSTEM","mapStateToProps","state","started","app","admin","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,eAAe,IAAIC,MAA5B,QAA0C,wBAA1C;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,SAASC,mBAAT,EAA8BC,sBAA9B,QAA4D,uBAA5D;AAEA,SAASC,IAAT,QAAqB,UAArB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,gBAAjB,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,GAAN,SAAkBlB,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAExBmB,oBAFwB,GAED,MAAM;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AACA,UAAI;AAAEC,QAAAA;AAAF,UAAmBF,SAAS,CAACG,QAAV,EAAvB;;AACA,UAAID,YAAJ,EAAkB;AACd,YAAI,KAAKD,KAAL,CAAWG,YAAf,EAA6B;AACzBC,UAAAA,OAAO,CAACC,OAAR,CAAgB,KAAKL,KAAL,CAAWG,YAAX,EAAhB,EACKG,IADL,CACU,MAAM,KAAKC,QAAL,CAAc;AAAEN,YAAAA,YAAY,EAAE;AAAhB,WAAd,CADhB,EAEKO,KAFL,CAEW,MAAM,KAAKD,QAAL,CAAc;AAAEN,YAAAA,YAAY,EAAE;AAAhB,WAAd,CAFjB;AAGH,SAJD,MAIO;AACH,eAAKM,QAAL,CAAc;AAAEN,YAAAA,YAAY,EAAE;AAAhB,WAAd;AACH;AACJ;AACJ,KAduB;AAAA;;AAe5B;AACIQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,oBAAL;AACH,GAlBuB,CAmB5B;;;AACIY,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,6BAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAExB,OAAjB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK,KAAKc,KAAL,CAAWW,UAAX,iBAAyB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAF9B,eAII;AAAM,YAAA,SAAS,EAAC,mBAAhB;AAAA,mCACI,QAAC,MAAD;AAAA,sCAEI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAErB,IAAI,CAACsB,IAAlB;AAAwB,gBAAA,KAAK,MAA7B;AAA8B,gBAAA,SAAS,EAAGrB;AAA1C;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAKI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAED,IAAI,CAACuB,KAAlB;AAAyB,gBAAA,SAAS,EAAExB,sBAAsB,CAACG,KAAD;AAA1D;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEF,IAAI,CAACwB,MAAlB;AAA0B,gBAAA,SAAS,EAAE1B,mBAAmB,CAACM,MAAD;AAAxD;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAeI,QAAC,cAAD;AACI,YAAA,SAAS,EAAC,iBADd;AACgC,YAAA,cAAc,EAAC,YAD/C;AAC4D,YAAA,aAAa,EAAC,iBAD1E;AAEI,YAAA,SAAS,EAAE,KAFf;AAEsB,YAAA,eAAe,EAAE,IAFvC;AAE6C,YAAA,YAAY,EAAE,KAF3D;AAGI,YAAA,gBAAgB,EAAE,IAHtB;AAG4B,YAAA,YAAY,EAAE,KAH1C;AAGiD,YAAA,SAAS,EAAE,KAH5D;AAII,YAAA,WAAW,eAAE,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAJjB;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA6BH;;AAlDuB;;AAqD5B,MAAMqB,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACE,GAAN,CAAUD,OADhB;AAEHN,IAAAA,UAAU,EAAEK,KAAK,CAACG,KAAN,CAAYR;AAFrB,GAAP;AAIH,CALD;;AAOA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO,EAAP;AAEH,CAHD;;AAKA,eAAexC,OAAO,CAACkC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CvB,GAA7C,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter as Router } from 'connected-react-router';\nimport { history } from '../redux'\nimport { ToastContainer } from 'react-toastify';\n\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\n\nimport { path } from '../utils'\n\n// import Home => HIEN THI TRANG HOME.JS\nimport Home from '../routes/Home';\n// import Login => Hien Thi Trang Login.js\n// import Login from '../routes/Login';\nimport Login from './Auth/Login';\n\nimport Header from './Header/Header';\nimport System from '../routes/System';\n\nimport { CustomToastCloseButton } from '../components/CustomToast';\nimport ConfirmModal from '../components/ConfirmModal';\n\nclass App extends Component {\n\n    handlePersistorState = () => {\n        const { persistor } = this.props;\n        let { bootstrapped } = persistor.getState();\n        if (bootstrapped) {\n            if (this.props.onBeforeLift) {\n                Promise.resolve(this.props.onBeforeLift())\n                    .then(() => this.setState({ bootstrapped: true }))\n                    .catch(() => this.setState({ bootstrapped: true }));\n            } else {\n                this.setState({ bootstrapped: true });\n            }\n        }\n    };\n// => HIEN VIEW \n    componentDidMount() {\n        this.handlePersistorState();\n    }\n// NHUC LENH JS => VAO FILE HTML\n    render() {\n        return (\n            <Fragment>\n                {/* LAY DU LIEU FONTEND */}\n                <Router history={history}>\n                    <div className=\"main-container\">\n                        <ConfirmModal /> \n                        {this.props.isLoggedIn && <Header />}\n\n                        <span className=\"content-container\">\n                            <Switch>\n                                {/* NEU KHONG LOGIN => TRUE => TRANG HOME */}\n                                <Route path={path.HOME} exact component={(Home)} />\n                                {/* KIEM TRA FROM DANG NHAP */}\n                                {/* path.LOGIN => DUONG LINK HIEN THI TOI FILE */}\n                                <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\n                                <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\n                            </Switch>\n                        </span>\n\n                        <ToastContainer\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\n                            closeButton={<CustomToastCloseButton />}\n                        />\n                    </div>\n                </Router>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        started: state.app.started,\n        isLoggedIn: state.admin.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}